(()=>{"use strict";var e;function o(e){return new Promise((o=>{setTimeout((()=>{console.log(`order: ${e}`),o()}),100)}))}(e=[new Promise(((e,o)=>{setTimeout(e,500,"fulfilledFirst")})),new Promise(((e,o)=>{setTimeout(e,300,"fulfilledSecond")})),new Promise(((e,o)=>{setTimeout(e,100,"fulfilledThird")})),new Promise(((e,o)=>{o(new Error("refusal"))}))],new Promise(((o,t)=>{const r=[];let n=0;e.forEach(((l,s)=>{l.then((t=>{r[s]=t,n++,n===e.length&&o(r)})).catch(t)}))}))).then((e=>{console.log("result",e)})).catch((e=>{console.log(e.message)})),function(e){return new Promise(((o,t)=>{const r=[];let n=0,l=!1;e.forEach(((s,i)=>{s.then((e=>{l||(l=!0,o(e))})).catch((o=>{r[i]=o,n++,n!==e.length||l||t(new AggregateError(r,"All reject return AggregateError"))}))}))}))}([new Promise(((e,o)=>{setTimeout(e,100,"fulfilledFirst")})),new Promise(((e,o)=>{setTimeout(e,300,"fulfilledSecond")})),new Promise(((e,o)=>{setTimeout(e,500,"fulfilledThird")})),new Promise(((e,o)=>{o(new Error("refusal"))}))]).then((e=>{console.log("result",e)})).catch((e=>{console.log(e.errors)})),async function(e){for(const o of e)await o()}([()=>o(1),()=>o(2),()=>o(3)]);const t=new Date,r=t.getDate(),n=t.getMonth(),l=t.getFullYear();console.log(l,"year"),(2e3,new Promise((e=>{setTimeout(e,2e3)}))).then((()=>console.log(n,"month"))).then((()=>console.log(r,"date")))})();